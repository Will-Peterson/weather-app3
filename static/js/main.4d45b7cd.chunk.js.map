{"version":3,"sources":["images/wi-alien.svg","components/LocationDisplay/LocationDisplay.js","components/DateTimeDisplay/DateTimeDisplay.js","components/WeatherDisplay/WeatherDisplay.js","components/app/App.js","index.js"],"names":["module","exports","geoLat","navigator","geolocation","getCurrentPosition","pos","coords","latitude","toFixed","longitude","accuracy","err","code","PERMISSION_DENIED","alert","POSITION_UNAVAILABLE","TIMEOUT","console","log","LocationDisplay","className","DateTimeDisplay","WeatherDisplay","src","Alien","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,sC,uMCIvCC,G,iBAAS,IAMTC,UAAUC,YAGVD,UAAUC,YAAYC,oBAO1B,SAAuBC,GAErBJ,EAASI,EAAIC,OAAOC,SAASC,QAAQ,GAC5BH,EAAIC,OAAOG,UAAUD,QAAQ,GAC7BH,EAAIC,OAAOI,SAASF,QAAQ,MAIvC,SAAmBG,GACjB,OAAQA,EAAIC,MACV,KAAKD,EAAIE,kBACPC,MAAM,4CACN,MACF,KAAKH,EAAII,qBACPD,MAAM,wCACN,MACF,KAAKH,EAAIK,QACPF,MAAM,+CACN,MACF,QACEA,MAAM,kCAzBRA,MAAM,kDAgCVG,QAAQC,IAAIjB,GA4CGkB,MAjBf,WACI,OACI,yBAAKC,UAAU,wB,MC7DRC,MAZf,WACI,OACI,yBAAKD,UAAU,sBACX,yBAAKA,UAAU,eAAf,UACA,6BACA,yBAAKA,UAAU,QAAf,oBACA,6BACA,yBAAKA,UAAU,QAAf,a,wBCIGE,MAVf,WACI,OACI,yBAAKF,UAAU,qBACX,yBAAKA,UAAU,WAAf,QACA,yBAAKA,UAAU,eAAc,yBAAKG,IAAKC,OACvC,yBAAKJ,UAAU,WAAf,UCYGK,MAff,WACE,OACE,yBAAKL,UAAU,iBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,8BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPRM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4d45b7cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wi-alien.531b634c.svg\";","import React from 'react';\nimport './LocationDisplay.css';\n\n\nvar geoLat = '';\nvar geoLng = '';\nvar geoAcc = '';\n\n\n//More complete version\nif (navigator.geolocation) {\n    // Request the current position\n    // If successful, call getPosSuccess; On error, call getPosErr\n    navigator.geolocation.getCurrentPosition(getPosSuccess, getPosErr);\n} else {\n    alert('geolocation not available?! What year is this?');\n    // IP address or prompt for city?\n}\n\n// getCurrentPosition: Successful return\nfunction getPosSuccess(pos) {\n  // Get the coordinates and accuracy properties from the returned object\n  geoLat = pos.coords.latitude.toFixed(5);\n  geoLng = pos.coords.longitude.toFixed(5);\n  geoAcc = pos.coords.accuracy.toFixed(1);\n}\n\n// getCurrentPosition: Error returned\nfunction getPosErr(err) {\n  switch (err.code) {\n    case err.PERMISSION_DENIED:\n      alert(\"User denied the request for Geolocation.\");\n      break;\n    case err.POSITION_UNAVAILABLE:\n      alert(\"Location information is unavailable.\");\n      break;\n    case err.TIMEOUT:\n      alert(\"The request to get user location timed out.\");\n      break;\n    default:\n      alert(\"An unknown error occurred.\");\n  }\n}\n\n\n\n\nconsole.log(geoLat);\n\n\n\n\n\n\n\n// const [latitude, getLatitude] = useState('');\n// const [longitude, getLongitude] = useState('');\n// let latitude = '';\n// let longitude = '';\n\n// if (navigator.geolocation) {\n//     navigator.geolocation.getCurrentPosition(geoPosition => {\n//         latitude = geoPosition.coords.latitude;\n//         longitude = geoPosition.coords.longitude;\n//     });\n// } else {\n//     console.log('no connection');\n// }\n\n// function geoPosition(position) {\n//     latitude = position.coords.latitude;\n//     longitude = position.coords.longitude;\n// }\n\nfunction LocationDisplay() {\n    return (\n        <div className='location-container'>\n            {/* {latitude}<br/>\n            {longitude} */}\n            {/* Your latitude: {latitude}<br />\n            Your longitude: {longitude} */}\n        </div>\n         \n  \n\n        \n        \n    );\n}\n// console.log(navigator.geolocation.getCurrentPosition());\n\nexport default LocationDisplay;\n\n\n\n\n","import React from 'react';\nimport './DateTimeDisplay.css';\n\nfunction DateTimeDisplay() {\n    return (\n        <div className='datetime-container'>\n            <div className='day-of-week'>Monday</div>\n            <hr />\n            <div className='date'>October 03, 2020</div>\n            <hr />\n            <div className='time'>6:18 PM</div>\n        </div>\n    );\n}\n\nexport default DateTimeDisplay;","import React from 'react';\nimport './WeatherDisplay.css';\nimport Alien from '../../images/wi-alien.svg';\n\nfunction WeatherDisplay() {\n    return (\n        <div className='weather-container'>\n            <div className='degrees'>45 F</div>\n            <div className='forcast-img'><img src={Alien} /></div>\n            <div className='forcast'>RAIN</div>\n        </div>\n    );\n}\n\nexport default WeatherDisplay;","import React from 'react';\nimport './App.css';\nimport LocationDisplay from '../LocationDisplay/LocationDisplay';\nimport DateTimeDisplay from '../DateTimeDisplay/DateTimeDisplay';\nimport WeatherDisplay from '../WeatherDisplay/WeatherDisplay'; \n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <LocationDisplay />\n      <div className='datetime-weather-container'>\n        <DateTimeDisplay />\n        <WeatherDisplay />\n        \n      </div>\n    </div>\n  );\n}\n// let position = navigator.geolocation.getCurrentPosition();\n// console.log(position)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}